
version: 2.1
jobs:
  prepare-environment:
    docker:
      - image: cimg/python:3.8.0-node
    steps:
      - checkout
      - run:
          name: Swap node versions
          command: >
            set +e

            wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.1/install.sh | bash

            export NVM_DIR="$HOME/.nvm"

            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"

            nvm install v16.17.0

            nvm alias default 16.17.0


            echo 'export NVM_DIR="$HOME/.nvm"' >> $BASH_ENV

            echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
      - run:
          name: curl pdm
          command: curl -sSL
            https://raw.githubusercontent.com/pdm-project/pdm/main/install-pdm.py
            | python3 -
      - restore_cache:
          keys:
            - dependency-cache-pdm-{{ checksum "pdm.lock" }}
      - run:
          name: update-deps
          command: pdm run update-deps
      - run:
          name: pdm install
          command: pdm install
      - save_cache:
          key: dependency-cache-pdm-{{ checksum "pdm.lock" }}
          paths:
            - .venv
      - persist_to_workspace:
          root: .
          paths:
            - .venv
            - .nvm
  lint:
    docker:
      - image: cimg/python:3.8.0-node
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: lint
          command: pdm run lint
  run-bundler:
    docker:
      - image: cimg/python:3.8.0-node
      - image: ethereum/client-go:v1.10.26
        command: --miner.gaslimit 12000000 --http --http.api personal,eth,net,web3,debug
          --allow-insecure-unlock --rpc.allow-unprotected-txs --http.vhosts
          '*,localhost,host.docker.internal' --http.corsdomain '*' --http.addr
          '0.0.0.0' --dev --nodiscover --maxpeers 0 --mine --miner.threads 1
          --verbosity 2 --ignore-legacy-receipts
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: clone bundler
          command: git clone https://github.com/eth-infinitism/bundler.git
      - restore_cache:
          keys:
            - dependency-cache-yarn-{{ checksum "./bundler/yarn.lock" }}
      - run:
          name: yarn install for bundler
          working_directory: ./bundler
          command: yarn install --ignore-engines && yarn preprocess
      - run:
          name: deploy entry point
          working_directory: ./bundler
          command: yarn hardhat-deploy --network localhost
          background: true
      - run:
          name: run bundler
          working_directory: ./bundler
          command: yarn bundler
          background: true
      - run:
          name: await bundler
          working_directory: ./bundler
          shell: /bin/sh
          command: >
            wget --post-data="{\"method\": \"eth_supportedEntryPoints\"}"
            --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=15 -t
            10 http://localhost:3000/rpc
      - save_cache:
          key: dependency-cache-yarn-{{ checksum "./bundler/yarn.lock" }}
          paths:
            - ./bundler/node_modules
  pytest:
    docker:
      - image: cimg/python:3.8.0-node
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: pytest
          command: pdm run test
workflows:
  test-bundler-workflow:
    jobs:
      - prepare-environment
      - lint:
          requires:
            - prepare-environment
      - run-bundler:
          requires:
            - prepare-environment
      - pytest:
          requires:
            - run-bundler
